// <auto-generated />
using System;
using Database2._0;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Database2._0.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191113124409_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Database2._0.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Email");

                    b.Property<int>("GoalsCount");

                    b.Property<bool>("IsActive");

                    b.Property<string>("LastName");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("SendNotifications");

                    b.Property<int>("WeekendeCounts");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Database2._0.Models.PlayerSeasonStatistic", b =>
                {
                    b.Property<int>("SeasonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PlayerId");

                    b.Property<int>("SeasonYear");

                    b.HasKey("SeasonId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("SeasonYear");

                    b.ToTable("PlayerSeasonStatistic");
                });

            modelBuilder.Entity("Database2._0.Models.PlayerWeekendStatistic", b =>
                {
                    b.Property<int>("PlayerWeekendId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Asisstance");

                    b.Property<int>("Goals");

                    b.Property<int?>("PlayerSeasonStatisticSeasonId");

                    b.Property<string>("TeamName");

                    b.Property<int>("WeekendSessionId");

                    b.HasKey("PlayerWeekendId");

                    b.HasIndex("PlayerSeasonStatisticSeasonId");

                    b.HasIndex("TeamName");

                    b.HasIndex("WeekendSessionId");

                    b.ToTable("PlayerWeekendStatistic");
                });

            modelBuilder.Entity("Database2._0.Models.SeasonSession", b =>
                {
                    b.Property<int>("SeasonYear")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountOfGoals");

                    b.Property<DateTime>("DateFrom");

                    b.Property<DateTime>("DateTo");

                    b.Property<bool>("IsCurrentSeason");

                    b.HasKey("SeasonYear");

                    b.ToTable("SeasonSession");
                });

            modelBuilder.Entity("Database2._0.Models.Team", b =>
                {
                    b.Property<string>("TeamName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(90);

                    b.HasKey("TeamName");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("Database2._0.Models.WeekendSession", b =>
                {
                    b.Property<int>("WeekendSessionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfWeekend");

                    b.HasKey("WeekendSessionId");

                    b.ToTable("WeekendSession");
                });

            modelBuilder.Entity("Database2._0.Models.PlayerSeasonStatistic", b =>
                {
                    b.HasOne("Database2._0.Models.Player")
                        .WithMany("Statistics")
                        .HasForeignKey("PlayerId");

                    b.HasOne("Database2._0.Models.SeasonSession", "SeasonSession")
                        .WithMany("PlayerSeasonsStatistics")
                        .HasForeignKey("SeasonYear")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Database2._0.Models.PlayerWeekendStatistic", b =>
                {
                    b.HasOne("Database2._0.Models.PlayerSeasonStatistic")
                        .WithMany("AllWeekendStatistics")
                        .HasForeignKey("PlayerSeasonStatisticSeasonId");

                    b.HasOne("Database2._0.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamName");

                    b.HasOne("Database2._0.Models.WeekendSession", "WeekendSession")
                        .WithMany("PlayerWeekendStatistics")
                        .HasForeignKey("WeekendSessionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
